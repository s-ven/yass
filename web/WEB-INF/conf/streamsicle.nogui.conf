#            S T R E A M S I C L E
#                            take a lick
#
# Config file

# Top-level directory of MP3s, USE FORWARD SLASHES
streamsicle.playdir = UNCONFIGURED

# Host name of server for your listeners (will appear in playlist file)
streamsicle.host = localhost

# Description of the server (will appear in playlist file)
streamsicle.description = STREAMSICLE - take a lick

# The port on which the InterCastServer
# will listen for connections

streamsicle.port = 4711

# The 'admin' password.
# Currently this is needed to force the server to reload the files
# if it is empty or undefined, then anyone can reload the files
streamsicle.adminPassword = 

# The maximum number of clients to allow for this server.
# The default is 0, which means an unlimited number of
# clients can connect.
streamsicle.maxclients = 0

# This determines whether the length of the song is displayed after
# each song in the web interface
streamsicle.requesttree.showsongtimes = true

# END OF STREAMSICLE STUFF

#    -*> Fluid Streaming Server <*-

# The stream specifies what class to 
# use for fetching data

streamsicle.stream = com.streamsicle.fluid.InteractiveStream

fluid.stream = com.streamsicle.fluid.MP3InputStream

fluid.descriptor = com.streamsicle.fluid.ID3Tag

streamsicle.history = com.streamsicle.MemoryPlayHistory

# --- Server specific options ---

# The mime type of the media 

streamsicle.mime = audio/mpeg

# The file containing the connection 
# rules
	
streamsicle.rules = WEB-INF/conf/hosts.rules

streamsicle.descriptions = true;

# This option sets the server randomizer
# and handles the way songs are selected
# by streamsicle
# Available options include:
#   com.streamsicle.RandomSelector
#	* a generic selector that returns a random song every time
#   com.streamsicle.RandomWithHistorySelector
#	* returns a random song, but chooses all other songs
#	* available before repeating a song twice
#   com.streamsicle.WeightedRandomSelector
#	* returns random songs based on request popularity

streamsicle.randomizer = com.streamsicle.RandomSelector

# Enter then uncomment this URL to rebroadcast another server's stream
# EXPERIMENTAL

# external.stream.url = http://otherstreamsicle.server:4711

# BUF

mp3inputstream.buffersize = 10
